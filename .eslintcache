[{"/Users/alex/dev/__mine/91/src/index.tsx":"1","/Users/alex/dev/__mine/91/src/reportWebVitals.ts":"2","/Users/alex/dev/__mine/91/src/App.tsx":"3","/Users/alex/dev/__mine/91/src/ui/components/LabeledInput/index.tsx":"4","/Users/alex/dev/__mine/91/src/ui/components/LabeledInput/LabeledInput.tsx":"5","/Users/alex/dev/__mine/91/src/ui/components/NavBar/index.tsx":"6","/Users/alex/dev/__mine/91/src/ui/components/NavBar/NavBar.tsx":"7"},{"size":422,"mtime":1620631561484,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1620630177797,"results":"10","hashOfConfig":"9"},{"size":10584,"mtime":1620983529581,"results":"11","hashOfConfig":"9"},{"size":42,"mtime":1620806228911,"results":"12","hashOfConfig":"9"},{"size":758,"mtime":1620979346109,"results":"13","hashOfConfig":"9"},{"size":36,"mtime":1620806742386,"results":"14","hashOfConfig":"9"},{"size":371,"mtime":1620806924926,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1m6u4rh",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/alex/dev/__mine/91/src/index.tsx",[],[],"/Users/alex/dev/__mine/91/src/reportWebVitals.ts",["32"],"import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/alex/dev/__mine/91/src/App.tsx",["33","34","35","36"],"/Users/alex/dev/__mine/91/src/ui/components/LabeledInput/index.tsx",[],"/Users/alex/dev/__mine/91/src/ui/components/LabeledInput/LabeledInput.tsx",[],"/Users/alex/dev/__mine/91/src/ui/components/NavBar/index.tsx",[],"/Users/alex/dev/__mine/91/src/ui/components/NavBar/NavBar.tsx",[],{"ruleId":"37","severity":1,"message":"38","line":3,"column":25,"nodeType":"39","messageId":"40","endLine":3,"endColumn":57},{"ruleId":"41","severity":1,"message":"42","line":213,"column":56,"nodeType":"43","messageId":"44","endLine":213,"endColumn":57},{"ruleId":"41","severity":1,"message":"45","line":241,"column":10,"nodeType":"43","messageId":"44","endLine":241,"endColumn":21},{"ruleId":"41","severity":1,"message":"46","line":241,"column":23,"nodeType":"43","messageId":"44","endLine":241,"endColumn":37},{"ruleId":"41","severity":1,"message":"42","line":274,"column":23,"nodeType":"43","messageId":"44","endLine":274,"endColumn":24},"@typescript-eslint/explicit-module-boundary-types","Missing return type on function.","ArrowFunctionExpression","missingReturnType","@typescript-eslint/no-unused-vars","'e' is defined but never used.","Identifier","unusedVar","'transformer' is assigned a value but never used.","'setTransformer' is assigned a value but never used."]